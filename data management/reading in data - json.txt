df <- fromJSON("https://dl.dropboxusercontent.com/s/p0c69a6w28ylon7/soapdump.json?dl=1", method = "C", unexpected.escape = "error" )


# install and load rio
library("devtools")

install_github("leeper/rio")

# import
import("https://dl.dropboxusercontent.com/s/p0c69a6w28ylon7/soapdump.json?dl=1")


json_data <- fromJSON(file="https://dl.dropboxusercontent.com/s/p0c69a6w28ylon7/soapdump.json?dl=1")

library("rjson")
##json_file <- "http://api.worldbank.org/country?per_page=10&region=OED&lendingtype=LNX&format=json"
json_file <- "https://dl.dropboxusercontent.com/s/p0c69a6w28ylon7/soapdump.json?dl=1"

json_data <- fromJSON(json_file)

########### WORKS, but in a list

library("RJSONIO")
json_file <- "https://dl.dropboxusercontent.com/s/p0c69a6w28ylon7/soapdump.json?dl=1"
json_data <- fromJSON(json_file)

json_data1 <- lapply(json_data, function(x) {
  x[sapply(x, is.null)] <- NA
  unlist(x)
})

############
############


## User-written function for frequency distributions
freq.table.missing <- function(var, vname=deparse(substitute(var))) {
                             print(vname)
                             cbind(Freq      =table(var, useNA="always"), 
                                   CumFreq   =cumsum(table(var, useNA="always")), 
                                   RelFreq   =round(prop.table(table(var, useNA="always")), digits=2),
                                   CumRelFreq=round(cumsum(prop.table(table(var, useNA="always"))), digits=2)
                                   )
                            }

freq.table <- function(var, vname=deparse(substitute(var))) {
                             print(vname)
                             cbind(Freq      =table(var), 
                                   CumFreq   =cumsum(table(var)), 
                                   RelFreq   =round(prop.table(table(var)), digits=2),
                                   CumRelFreq=round(cumsum(prop.table(table(var))), digits=2)
                                   )
                            }


library(jsonlite)
library(httr)

#get data
raw <- fromJSON("https://dl.dropboxusercontent.com/s/p0c69a6w28ylon7/soapdump.json?dl=1")

raw$date <- as.Date(substr(raw$session_token, 38, 47))

study_period <- subset(raw, date >= as.Date("2015-09-25") &date < as.Date("2016-01-01"))

## Add sequential StudyIDs to subsetted data
study_period$study_id<-seq.int(nrow(study_period))

## Delete unneeded variables
drop <- names(study_period ) %in% c("adage_version", "application_name", "application_version", "context", "client_id")
df <- study_period[!drop]

caseStart <- as.data.frame(subset(df, key == "SOAPCaseStart"))
caseEnd   <- as.data.frame(subset(df, key == "SOAPCaseEnd"))

plays <- merge(caseStart, caseEnd, by="study_id", all.x=TRUE)

######################################
##                                  ##
##   MERGING MULTIPLE DATA FRAMES   ##
##                                  ##
######################################
df1 = data.frame(id=c('1','73','2','10','43'),v1=c(1,2,3,4,5))
df2 = data.frame(id=c('7','23','57','2','62','96'),v2=c(1,2,3,4,5,6))
df3 = data.frame(id=c('23','62'),v3=c(1,2))
 
Reduce(function(x, y) merge(x, y, all=TRUE), list(df1, df2, df3))
 

Reduce(function(x, y) merge(x, y, all=TRUE), list(caseStart, caseEnd))


